package com.example.malwaredetectionapp

import android.content.Intent
import android.os.Bundle
import androidx.activity.ComponentActivity
import androidx.activity.compose.setContent
import androidx.compose.foundation.Image
import androidx.compose.foundation.background
import androidx.compose.foundation.border
import androidx.compose.foundation.layout.Box
import androidx.compose.foundation.layout.Column
import androidx.compose.foundation.layout.Spacer
import androidx.compose.foundation.layout.defaultMinSize
import androidx.compose.foundation.layout.fillMaxSize
import androidx.compose.foundation.layout.fillMaxWidth
import androidx.compose.foundation.layout.height
import androidx.compose.foundation.layout.padding
import androidx.compose.foundation.layout.size
import androidx.compose.foundation.rememberScrollState
import androidx.compose.foundation.shape.RoundedCornerShape
import androidx.compose.foundation.verticalScroll
import androidx.compose.material3.Button
import androidx.compose.material3.ButtonDefaults
import androidx.compose.material3.LocalTextStyle
import androidx.compose.material3.OutlinedTextFieldDefaults
import androidx.compose.material3.Text
import androidx.compose.material3.TextField
import androidx.compose.material3.TextFieldDefaults
import androidx.compose.runtime.Composable
import androidx.compose.runtime.getValue
import androidx.compose.runtime.mutableStateOf
import androidx.compose.runtime.remember
import androidx.compose.ui.Alignment
import androidx.compose.ui.Modifier
import androidx.compose.ui.graphics.Color
import androidx.compose.ui.platform.LocalContext
import androidx.compose.ui.res.colorResource
import androidx.compose.ui.res.painterResource
import androidx.compose.ui.text.font.FontWeight
import androidx.compose.ui.tooling.preview.Preview
import androidx.compose.ui.unit.dp
import androidx.compose.ui.unit.sp
import com.example.malwaredetectionapp.ui.theme.MalwareDetectionAppTheme

class AnalyzerActivity : ComponentActivity() {
    override fun onCreate(savedInstanceState: Bundle?) {
        super.onCreate(savedInstanceState)
        setContent {
            MalwareDetectionAppTheme {
                AnalyzerScreen()
            }
        }
    }
}

@Preview
@Composable
fun AnalyzerScreenPreview() {
    AnalyzerScreen()
}

@Composable
fun AnalyzerScreen() {
    val result by remember { mutableStateOf("Đây là nội dung console.\nDòng thứ 2.") }
    val context = LocalContext.current
    Column(
        modifier = Modifier
            .fillMaxSize()
            .verticalScroll(rememberScrollState())
            .background(colorResource(id = R.color.background))
            .padding(vertical = 100.dp),
        horizontalAlignment = Alignment.CenterHorizontally
    ) {
        Image(
            painter = painterResource(id = R.drawable.benign),
            contentDescription = "Benign",
            modifier = Modifier.size(80.dp)
        )

        Box(
            modifier = Modifier
                .fillMaxSize()
                .padding(50.dp)
                .background(
                    colorResource(id = R.color.console),
                    shape = RoundedCornerShape(12.dp)
                ),
            contentAlignment = Alignment.TopCenter

        ) {
            Column(
                modifier = Modifier
                    .fillMaxSize()
                    .padding(16.dp)
            ) {
                Text(
                    "Console",
                    color = Color.White,
                    fontSize = 16.sp,
                    fontWeight = FontWeight.Bold,

                )

                Spacer(modifier = Modifier.height(8.dp))

                TextField(
                    value = result,
                    onValueChange = {}, // Không cho chỉnh sửa
                    modifier = Modifier
                        .fillMaxWidth()
                        .defaultMinSize(minHeight = 150.dp),
                    colors = TextFieldDefaults.colors(
                        focusedTextColor = Color.White,
                        unfocusedTextColor = Color.White,
                        disabledTextColor = Color.White,
                        cursorColor = Color.Transparent,
                        focusedContainerColor = Color.Transparent,
                        unfocusedContainerColor = Color.Transparent,
                        disabledContainerColor = Color.Transparent
                    ),
                    enabled = false, // Không cho chỉnh sửa
                    readOnly = true,
                    singleLine = false,
                    maxLines = 10,
                    textStyle = LocalTextStyle.current.copy(fontSize = 14.sp)
                )
            }
        }
        Button(
            onClick = {
                context.startActivity(Intent(context, DashboardActivity::class.java))
            },
            modifier = Modifier
                .padding(16.dp)
                // Tạo viền
                .border(
                    width = 3.dp,
                    color = Color.Red,
                    shape = RoundedCornerShape(8.dp)
                ),
            colors = ButtonDefaults.buttonColors(
                containerColor = colorResource(id = R.color.background),
                contentColor = Color.Red
            ),
            // Tạo nút bo góc 8dp
            shape = RoundedCornerShape(8.dp)
        ) {
            Text("Cancel", fontSize = 20.sp)
        }
    }
}